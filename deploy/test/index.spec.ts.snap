// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`openai > should call openai via gateway > llm 1`] = `
{
  "choices": [
    {
      "finish_reason": "stop",
      "index": 0,
      "message": {
        "annotations": [],
        "content": "Paris.",
        "refusal": null,
        "role": "assistant",
      },
    },
  ],
  "created": 1757316780,
  "id": "chatcmpl-CDQeyDf30d6s2eFqr1PmAs2sdQcAd",
  "model": "gpt-5-2025-08-07",
  "object": "chat.completion",
  "service_tier": "default",
  "system_fingerprint": null,
  "usage": {
    "completion_tokens": 11,
    "completion_tokens_details": {
      "accepted_prediction_tokens": 0,
      "audio_tokens": 0,
      "reasoning_tokens": 0,
      "rejected_prediction_tokens": 0,
    },
    "prompt_tokens": 23,
    "prompt_tokens_details": {
      "audio_tokens": 0,
      "cached_tokens": 0,
    },
    "pydantic_ai_gateway": {
      "cost_estimate": 0.00013875,
    },
    "total_tokens": 34,
  },
}
`;

exports[`openai > should call openai via gateway > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat gpt-5-2025-08-07",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"},"http.response.body.text":{"type":"string"},"gen_ai.response.model":{"type":"string"},"gen_ai.usage.input_tokens":{"type":"number"},"gen_ai.usage.cache_read_tokens":{"type":"number"},"gen_ai.usage.cache_write_tokens":{},"gen_ai.usage.output_tokens":{"type":"number"},"gen_ai.usage.input_audio_tokens":{},"gen_ai.usage.cache_audio_read_tokens":{},"gen_ai.usage.output_audio_tokens":{"type":"number"},"events":{}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "gpt-5",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "openai",
    },
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{
  "model": "gpt-5",
  "messages": [
    {
      "role": "developer",
      "content": "You are a helpful assistant."
    },
    {
      "role": "user",
      "content": "What is the capital of France?"
    }
  ]
}",
    },
  },
  {
    "key": "http.response.body.text",
    "value": {
      "stringValue": "{"id":"chatcmpl-CDQeyDf30d6s2eFqr1PmAs2sdQcAd","object":"chat.completion","created":1757316780,"model":"gpt-5-2025-08-07","choices":[{"index":0,"message":{"role":"assistant","content":"Paris.","refusal":null,"annotations":[]},"finish_reason":"stop"}],"usage":{"prompt_tokens":23,"completion_tokens":11,"total_tokens":34,"prompt_tokens_details":{"cached_tokens":0,"audio_tokens":0},"completion_tokens_details":{"reasoning_tokens":0,"audio_tokens":0,"accepted_prediction_tokens":0,"rejected_prediction_tokens":0},"pydantic_ai_gateway":{"cost_estimate":0.00013875}},"service_tier":"default","system_fingerprint":null}",
    },
  },
  {
    "key": "gen_ai.response.model",
    "value": {
      "stringValue": "gpt-5-2025-08-07",
    },
  },
  {
    "key": "gen_ai.usage.input_tokens",
    "value": {
      "intValue": 23,
    },
  },
  {
    "key": "gen_ai.usage.cache_read_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.cache_write_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_tokens",
    "value": {
      "intValue": 11,
    },
  },
  {
    "key": "gen_ai.usage.input_audio_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.cache_audio_read_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_audio_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "events",
    "value": {
      "arrayValue": {
        "values": [],
      },
    },
  },
]
`;
