[project]
name = "pydantic-ai-gateway"
version = "0.0.0"
description = "Config of pydantic-ai-gateway"
requires-python = ">=3.12"
dependencies = [
    "genai-prices>=0.0.22",
    "logfire[aiohttp-client,httpx]>=4.3.3",
    "pydantic>=2.11.7",
    "ruamel-yaml>=0.18.14",
    "proxy-vcr>=0.1.0",
]

[dependency-groups]
dev = ["pyright>=1.1.341", "ruff>=0.12.8"]
examples = [
    "devtools>=0.12.2",
    "logfire[aiohttp-client,httpx]>=4.3.3",
    "pydantic-ai",
]

[tool.uv.sources]
proxy-vcr = { workspace = true }
pydantic-ai = { git = "https://github.com/pydantic/pydantic-ai.git", branch = "add-coverage" }

[tool.uv.workspace]
members = ["proxy-vcr"]

[tool.uv]
default-groups = ["dev", "examples"]

[tool.ruff]
line-length = 120
target-version = "py312"

[tool.ruff.lint]
extend-select = ["Q", "RUF100", "C90", "UP", "I"]
flake8-quotes = { inline-quotes = "single", multiline-quotes = "double" }
isort = { combine-as-imports = true }
mccabe = { max-complexity = 18 }

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.format]
# don't format python in docstrings, pytest-examples takes care of it
docstring-code-format = false
quote-style = "single"

[tool.pyright]
pythonVersion = "3.12"
typeCheckingMode = "strict"
reportUnnecessaryTypeIgnoreComment = true
reportIgnoreCommentWithoutRule = true
reportUnusedParameter = true
reportIncompatibleUnannotatedOverride = true
reportImplicitAbstractClass = true
include = ["examples"]
venv = ".venv"

[tool.codespell]
ignore-words-list = ["afterAll"]
