// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`anthropic > should call anthropic via gateway > llm 1`] = `
{
  "content": [
    {
      "text": "The capital of France is Paris.",
      "type": "text",
    },
  ],
  "id": "msg_01AYbWvToCY9v2yZnPNvyyXg",
  "model": "claude-sonnet-4-20250514",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation": {
      "ephemeral_1h_input_tokens": 0,
      "ephemeral_5m_input_tokens": 0,
    },
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 20,
    "output_tokens": 10,
    "pydantic_ai_gateway": {
      "cost_estimate": 0.00020999999999999998,
    },
    "service_tier": "standard",
  },
}
`;

exports[`anthropic > should call anthropic via gateway > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-sonnet-4-20250514",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"gen_ai.request.max_tokens":{"type":"number"},"gen_ai.request.top_k":{"type":"number"},"gen_ai.request.top_p":{"type":"number"},"gen_ai.request.temperature":{"type":"number"},"gen_ai.request.stop_sequences":{},"gen_ai.request.seed":{},"gen_ai.response.finish_reasons":{},"gen_ai.response.id":{"type":"string"},"gen_ai.input.messages":{},"gen_ai.output.messages":{},"gen_ai.system_instructions":{},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"},"http.response.body.text":{"type":"string"},"gen_ai.response.model":{"type":"string"},"gen_ai.usage.input_tokens":{"type":"number"},"gen_ai.usage.cache_read_tokens":{"type":"number"},"gen_ai.usage.cache_write_tokens":{"type":"number"},"gen_ai.usage.output_tokens":{"type":"number"},"gen_ai.usage.input_audio_tokens":{},"gen_ai.usage.cache_audio_read_tokens":{},"gen_ai.usage.output_audio_tokens":{}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-sonnet-4-20250514",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "gen_ai.request.max_tokens",
    "value": {
      "intValue": 1024,
    },
  },
  {
    "key": "gen_ai.request.top_k",
    "value": {
      "intValue": 1,
    },
  },
  {
    "key": "gen_ai.request.top_p",
    "value": {
      "doubleValue": 0.95,
    },
  },
  {
    "key": "gen_ai.request.temperature",
    "value": {
      "doubleValue": 0.5,
    },
  },
  {
    "key": "gen_ai.request.stop_sequences",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "potato",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.request.seed",
    "value": {},
  },
  {
    "key": "gen_ai.response.finish_reasons",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "end_turn",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.response.id",
    "value": {
      "stringValue": "msg_01AYbWvToCY9v2yZnPNvyyXg",
    },
  },
  {
    "key": "gen_ai.input.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "user",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "What is the capital of France?",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.output.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "assistant",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "The capital of France is Paris.",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
                {
                  "key": "finish_reason",
                  "value": {
                    "stringValue": "end_turn",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.system_instructions",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "type",
                  "value": {
                    "stringValue": "text",
                  },
                },
                {
                  "key": "content",
                  "value": {
                    "stringValue": "You are a helpful assistant.",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{"model":"claude-sonnet-4-20250514","max_tokens":1024,"top_p":0.95,"top_k":1,"temperature":0.5,"stop_sequences":["potato"],"system":"You are a helpful assistant.","messages":[{"role":"user","content":"What is the capital of France?"}]}",
    },
  },
  {
    "key": "http.response.body.text",
    "value": {
      "stringValue": "{"id":"msg_01AYbWvToCY9v2yZnPNvyyXg","type":"message","role":"assistant","model":"claude-sonnet-4-20250514","content":[{"type":"text","text":"The capital of France is Paris."}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":20,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"cache_creation":{"ephemeral_5m_input_tokens":0,"ephemeral_1h_input_tokens":0},"output_tokens":10,"service_tier":"standard","pydantic_ai_gateway":{"cost_estimate":0.00020999999999999998}}}",
    },
  },
  {
    "key": "gen_ai.response.model",
    "value": {
      "stringValue": "claude-sonnet-4-20250514",
    },
  },
  {
    "key": "gen_ai.usage.input_tokens",
    "value": {
      "intValue": 20,
    },
  },
  {
    "key": "gen_ai.usage.cache_read_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.cache_write_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.output_tokens",
    "value": {
      "intValue": 10,
    },
  },
  {
    "key": "gen_ai.usage.input_audio_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.cache_audio_read_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_audio_tokens",
    "value": {},
  },
]
`;

exports[`anthropic > should call anthropic via gateway with builtin tools > llm 1`] = `
{
  "container": {
    "expires_at": "2025-10-20T16:41:06.989824Z",
    "id": "container_011CUJhjjzj2kHvukJ6EBPk1",
  },
  "content": [
    {
      "text": "I'll calculate the mean and standard deviation of the given dataset [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].",
      "type": "text",
    },
    {
      "id": "srvtoolu_011nWUi3MPyexaccKVcyEEK7",
      "input": {
        "command": "create",
        "file_text": "import math

# Dataset
data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Calculate mean
n = len(data)
mean = sum(data) / n

# Calculate standard deviation (population)
variance_pop = sum((x - mean) ** 2 for x in data) / n
std_dev_pop = math.sqrt(variance_pop)

# Calculate standard deviation (sample)
variance_sample = sum((x - mean) ** 2 for x in data) / (n - 1)
std_dev_sample = math.sqrt(variance_sample)

print("Dataset:", data)
print(f"Number of values: {n}")
print(f"\\nMean: {mean}")
print(f"\\nStandard Deviation (Population): {std_dev_pop:.6f}")
print(f"Standard Deviation (Sample): {std_dev_sample:.6f}")

# Show the calculation steps for clarity
print("\\n--- Calculation Steps ---")
print(f"Sum of values: {sum(data)}")
print(f"Mean = {sum(data)}/{n} = {mean}")

print("\\nDeviations from mean:")
deviations = [(x - mean) for x in data]
squared_deviations = [(x - mean) ** 2 for x in data]
for i, x in enumerate(data):
    print(f"  {x} - {mean} = {deviations[i]:.1f}, squared = {squared_deviations[i]:.2f}")

print(f"\\nSum of squared deviations: {sum(squared_deviations):.1f}")
print(f"Variance (Population) = {sum(squared_deviations):.1f}/{n} = {variance_pop:.2f}")
print(f"Variance (Sample) = {sum(squared_deviations):.1f}/{n-1} = {variance_sample:.2f}")",
        "path": "/tmp/calculate_stats.py",
      },
      "name": "text_editor_code_execution",
      "type": "server_tool_use",
    },
    {
      "content": {
        "is_file_update": false,
        "type": "text_editor_code_execution_create_result",
      },
      "tool_use_id": "srvtoolu_011nWUi3MPyexaccKVcyEEK7",
      "type": "text_editor_code_execution_tool_result",
    },
    {
      "id": "srvtoolu_016tYfWniKnR6rhRWckWCsvC",
      "input": {
        "command": "python /tmp/calculate_stats.py",
      },
      "name": "bash_code_execution",
      "type": "server_tool_use",
    },
    {
      "content": {
        "content": [],
        "return_code": 0,
        "stderr": "",
        "stdout": "Dataset: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Number of values: 10

Mean: 5.5

Standard Deviation (Population): 2.872281
Standard Deviation (Sample): 3.027650

--- Calculation Steps ---
Sum of values: 55
Mean = 55/10 = 5.5

Deviations from mean:
  1 - 5.5 = -4.5, squared = 20.25
  2 - 5.5 = -3.5, squared = 12.25
  3 - 5.5 = -2.5, squared = 6.25
  4 - 5.5 = -1.5, squared = 2.25
  5 - 5.5 = -0.5, squared = 0.25
  6 - 5.5 = 0.5, squared = 0.25
  7 - 5.5 = 1.5, squared = 2.25
  8 - 5.5 = 2.5, squared = 6.25
  9 - 5.5 = 3.5, squared = 12.25
  10 - 5.5 = 4.5, squared = 20.25

Sum of squared deviations: 82.5
Variance (Population) = 82.5/10 = 8.25
Variance (Sample) = 82.5/9 = 9.17
",
        "type": "bash_code_execution_result",
      },
      "tool_use_id": "srvtoolu_016tYfWniKnR6rhRWckWCsvC",
      "type": "bash_code_execution_tool_result",
    },
    {
      "text": "## Results

For the dataset **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:

- **Mean: 5.5**
- **Standard Deviation (Population): 2.872281**
- **Standard Deviation (Sample): 3.027650**

### Explanation:

1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**

2. **Standard Deviation** measures how spread out the numbers are from the mean:
   - **Population standard deviation** (σ) = 2.872281 - used when you have data for the entire population
   - **Sample standard deviation** (s) = 3.027650 - used when your data is a sample from a larger population

The calculation involves:
- Finding the deviation of each value from the mean
- Squaring each deviation
- Finding the average of squared deviations (variance)
- Taking the square root of the variance

The difference between population and sample standard deviation is in the denominator: population uses n (10), while sample uses n-1 (9) for the variance calculation, which corrects for bias when estimating from a sample.",
      "type": "text",
    },
  ],
  "id": "msg_01BUgFb3nX8ksaBUwernXmjh",
  "model": "claude-opus-4-1-20250805",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation": {
      "ephemeral_1h_input_tokens": 0,
      "ephemeral_5m_input_tokens": 0,
    },
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 8011,
    "output_tokens": 969,
    "pydantic_ai_gateway": {
      "cost_estimate": 0.19284,
    },
    "server_tool_use": {
      "web_fetch_requests": 0,
      "web_search_requests": 0,
    },
    "service_tier": "standard",
  },
}
`;

exports[`anthropic > should call anthropic via gateway with builtin tools > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-opus-4-1-20250805",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"gen_ai.request.max_tokens":{"type":"number"},"gen_ai.request.top_k":{},"gen_ai.request.top_p":{},"gen_ai.request.temperature":{},"gen_ai.request.stop_sequences":{},"gen_ai.request.seed":{},"gen_ai.response.finish_reasons":{},"gen_ai.response.id":{"type":"string"},"gen_ai.input.messages":{},"gen_ai.output.messages":{},"gen_ai.system_instructions":{},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"},"http.response.body.text":{"type":"string"},"gen_ai.response.model":{"type":"string"},"gen_ai.usage.input_tokens":{"type":"number"},"gen_ai.usage.cache_read_tokens":{"type":"number"},"gen_ai.usage.cache_write_tokens":{"type":"number"},"gen_ai.usage.output_tokens":{"type":"number"},"gen_ai.usage.input_audio_tokens":{},"gen_ai.usage.cache_audio_read_tokens":{},"gen_ai.usage.output_audio_tokens":{}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "gen_ai.request.max_tokens",
    "value": {
      "intValue": 4096,
    },
  },
  {
    "key": "gen_ai.request.top_k",
    "value": {},
  },
  {
    "key": "gen_ai.request.top_p",
    "value": {},
  },
  {
    "key": "gen_ai.request.temperature",
    "value": {},
  },
  {
    "key": "gen_ai.request.stop_sequences",
    "value": {},
  },
  {
    "key": "gen_ai.request.seed",
    "value": {},
  },
  {
    "key": "gen_ai.response.finish_reasons",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "end_turn",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.response.id",
    "value": {
      "stringValue": "msg_01BUgFb3nX8ksaBUwernXmjh",
    },
  },
  {
    "key": "gen_ai.input.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "user",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "Calculate the mean and standard deviation of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.output.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "assistant",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "I'll calculate the mean and standard deviation of the given dataset [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].",
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_011nWUi3MPyexaccKVcyEEK7",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "text_editor_code_execution",
                                },
                              },
                              {
                                "key": "arguments",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "command",
                                        "value": {
                                          "stringValue": "create",
                                        },
                                      },
                                      {
                                        "key": "path",
                                        "value": {
                                          "stringValue": "/tmp/calculate_stats.py",
                                        },
                                      },
                                      {
                                        "key": "file_text",
                                        "value": {
                                          "stringValue": "import math

# Dataset
data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Calculate mean
n = len(data)
mean = sum(data) / n

# Calculate standard deviation (population)
variance_pop = sum((x - mean) ** 2 for x in data) / n
std_dev_pop = math.sqrt(variance_pop)

# Calculate standard deviation (sample)
variance_sample = sum((x - mean) ** 2 for x in data) / (n - 1)
std_dev_sample = math.sqrt(variance_sample)

print("Dataset:", data)
print(f"Number of values: {n}")
print(f"\\nMean: {mean}")
print(f"\\nStandard Deviation (Population): {std_dev_pop:.6f}")
print(f"Standard Deviation (Sample): {std_dev_sample:.6f}")

# Show the calculation steps for clarity
print("\\n--- Calculation Steps ---")
print(f"Sum of values: {sum(data)}")
print(f"Mean = {sum(data)}/{n} = {mean}")

print("\\nDeviations from mean:")
deviations = [(x - mean) for x in data]
squared_deviations = [(x - mean) ** 2 for x in data]
for i, x in enumerate(data):
    print(f"  {x} - {mean} = {deviations[i]:.1f}, squared = {squared_deviations[i]:.2f}")

print(f"\\nSum of squared deviations: {sum(squared_deviations):.1f}")
print(f"Variance (Population) = {sum(squared_deviations):.1f}/{n} = {variance_pop:.2f}")
print(f"Variance (Sample) = {sum(squared_deviations):.1f}/{n-1} = {variance_sample:.2f}")",
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call_response",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_011nWUi3MPyexaccKVcyEEK7",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "text_editor_code_execution",
                                },
                              },
                              {
                                "key": "result",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "type",
                                        "value": {
                                          "stringValue": "text_editor_code_execution_create_result",
                                        },
                                      },
                                      {
                                        "key": "is_file_update",
                                        "value": {
                                          "boolValue": false,
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_016tYfWniKnR6rhRWckWCsvC",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "bash_code_execution",
                                },
                              },
                              {
                                "key": "arguments",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "command",
                                        "value": {
                                          "stringValue": "python /tmp/calculate_stats.py",
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call_response",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_016tYfWniKnR6rhRWckWCsvC",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "bash_code_execution",
                                },
                              },
                              {
                                "key": "result",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "type",
                                        "value": {
                                          "stringValue": "bash_code_execution_result",
                                        },
                                      },
                                      {
                                        "key": "stdout",
                                        "value": {
                                          "stringValue": "Dataset: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Number of values: 10

Mean: 5.5

Standard Deviation (Population): 2.872281
Standard Deviation (Sample): 3.027650

--- Calculation Steps ---
Sum of values: 55
Mean = 55/10 = 5.5

Deviations from mean:
  1 - 5.5 = -4.5, squared = 20.25
  2 - 5.5 = -3.5, squared = 12.25
  3 - 5.5 = -2.5, squared = 6.25
  4 - 5.5 = -1.5, squared = 2.25
  5 - 5.5 = -0.5, squared = 0.25
  6 - 5.5 = 0.5, squared = 0.25
  7 - 5.5 = 1.5, squared = 2.25
  8 - 5.5 = 2.5, squared = 6.25
  9 - 5.5 = 3.5, squared = 12.25
  10 - 5.5 = 4.5, squared = 20.25

Sum of squared deviations: 82.5
Variance (Population) = 82.5/10 = 8.25
Variance (Sample) = 82.5/9 = 9.17
",
                                        },
                                      },
                                      {
                                        "key": "stderr",
                                        "value": {
                                          "stringValue": "",
                                        },
                                      },
                                      {
                                        "key": "return_code",
                                        "value": {
                                          "intValue": 0,
                                        },
                                      },
                                      {
                                        "key": "content",
                                        "value": {
                                          "arrayValue": {
                                            "values": [],
                                          },
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "## Results

For the dataset **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:

- **Mean: 5.5**
- **Standard Deviation (Population): 2.872281**
- **Standard Deviation (Sample): 3.027650**

### Explanation:

1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**

2. **Standard Deviation** measures how spread out the numbers are from the mean:
   - **Population standard deviation** (σ) = 2.872281 - used when you have data for the entire population
   - **Sample standard deviation** (s) = 3.027650 - used when your data is a sample from a larger population

The calculation involves:
- Finding the deviation of each value from the mean
- Squaring each deviation
- Finding the average of squared deviations (variance)
- Taking the square root of the variance

The difference between population and sample standard deviation is in the denominator: population uses n (10), while sample uses n-1 (9) for the variance calculation, which corrects for bias when estimating from a sample.",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
                {
                  "key": "finish_reason",
                  "value": {
                    "stringValue": "end_turn",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.system_instructions",
    "value": {},
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{"model":"claude-opus-4-1-20250805","max_tokens":4096,"messages":[{"role":"user","content":"Calculate the mean and standard deviation of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"}],"tools":[{"type":"code_execution_20250825","name":"code_execution"}]}",
    },
  },
  {
    "key": "http.response.body.text",
    "value": {
      "stringValue": "{"model":"claude-opus-4-1-20250805","id":"msg_01BUgFb3nX8ksaBUwernXmjh","type":"message","role":"assistant","content":[{"type":"text","text":"I'll calculate the mean and standard deviation of the given dataset [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]."},{"type":"server_tool_use","id":"srvtoolu_011nWUi3MPyexaccKVcyEEK7","name":"text_editor_code_execution","input":{"command":"create","path":"/tmp/calculate_stats.py","file_text":"import math\\n\\n# Dataset\\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\n\\n# Calculate mean\\nn = len(data)\\nmean = sum(data) / n\\n\\n# Calculate standard deviation (population)\\nvariance_pop = sum((x - mean) ** 2 for x in data) / n\\nstd_dev_pop = math.sqrt(variance_pop)\\n\\n# Calculate standard deviation (sample)\\nvariance_sample = sum((x - mean) ** 2 for x in data) / (n - 1)\\nstd_dev_sample = math.sqrt(variance_sample)\\n\\nprint(\\"Dataset:\\", data)\\nprint(f\\"Number of values: {n}\\")\\nprint(f\\"\\\\nMean: {mean}\\")\\nprint(f\\"\\\\nStandard Deviation (Population): {std_dev_pop:.6f}\\")\\nprint(f\\"Standard Deviation (Sample): {std_dev_sample:.6f}\\")\\n\\n# Show the calculation steps for clarity\\nprint(\\"\\\\n--- Calculation Steps ---\\")\\nprint(f\\"Sum of values: {sum(data)}\\")\\nprint(f\\"Mean = {sum(data)}/{n} = {mean}\\")\\n\\nprint(\\"\\\\nDeviations from mean:\\")\\ndeviations = [(x - mean) for x in data]\\nsquared_deviations = [(x - mean) ** 2 for x in data]\\nfor i, x in enumerate(data):\\n    print(f\\"  {x} - {mean} = {deviations[i]:.1f}, squared = {squared_deviations[i]:.2f}\\")\\n\\nprint(f\\"\\\\nSum of squared deviations: {sum(squared_deviations):.1f}\\")\\nprint(f\\"Variance (Population) = {sum(squared_deviations):.1f}/{n} = {variance_pop:.2f}\\")\\nprint(f\\"Variance (Sample) = {sum(squared_deviations):.1f}/{n-1} = {variance_sample:.2f}\\")"}},{"type":"text_editor_code_execution_tool_result","tool_use_id":"srvtoolu_011nWUi3MPyexaccKVcyEEK7","content":{"type":"text_editor_code_execution_create_result","is_file_update":false}},{"type":"server_tool_use","id":"srvtoolu_016tYfWniKnR6rhRWckWCsvC","name":"bash_code_execution","input":{"command":"python /tmp/calculate_stats.py"}},{"type":"bash_code_execution_tool_result","tool_use_id":"srvtoolu_016tYfWniKnR6rhRWckWCsvC","content":{"type":"bash_code_execution_result","stdout":"Dataset: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\nNumber of values: 10\\n\\nMean: 5.5\\n\\nStandard Deviation (Population): 2.872281\\nStandard Deviation (Sample): 3.027650\\n\\n--- Calculation Steps ---\\nSum of values: 55\\nMean = 55/10 = 5.5\\n\\nDeviations from mean:\\n  1 - 5.5 = -4.5, squared = 20.25\\n  2 - 5.5 = -3.5, squared = 12.25\\n  3 - 5.5 = -2.5, squared = 6.25\\n  4 - 5.5 = -1.5, squared = 2.25\\n  5 - 5.5 = -0.5, squared = 0.25\\n  6 - 5.5 = 0.5, squared = 0.25\\n  7 - 5.5 = 1.5, squared = 2.25\\n  8 - 5.5 = 2.5, squared = 6.25\\n  9 - 5.5 = 3.5, squared = 12.25\\n  10 - 5.5 = 4.5, squared = 20.25\\n\\nSum of squared deviations: 82.5\\nVariance (Population) = 82.5/10 = 8.25\\nVariance (Sample) = 82.5/9 = 9.17\\n","stderr":"","return_code":0,"content":[]}},{"type":"text","text":"## Results\\n\\nFor the dataset **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:\\n\\n- **Mean: 5.5**\\n- **Standard Deviation (Population): 2.872281**\\n- **Standard Deviation (Sample): 3.027650**\\n\\n### Explanation:\\n\\n1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**\\n\\n2. **Standard Deviation** measures how spread out the numbers are from the mean:\\n   - **Population standard deviation** (σ) = 2.872281 - used when you have data for the entire population\\n   - **Sample standard deviation** (s) = 3.027650 - used when your data is a sample from a larger population\\n\\nThe calculation involves:\\n- Finding the deviation of each value from the mean\\n- Squaring each deviation\\n- Finding the average of squared deviations (variance)\\n- Taking the square root of the variance\\n\\nThe difference between population and sample standard deviation is in the denominator: population uses n (10), while sample uses n-1 (9) for the variance calculation, which corrects for bias when estimating from a sample."}],"container":{"id":"container_011CUJhjjzj2kHvukJ6EBPk1","expires_at":"2025-10-20T16:41:06.989824Z"},"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":8011,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"cache_creation":{"ephemeral_5m_input_tokens":0,"ephemeral_1h_input_tokens":0},"output_tokens":969,"service_tier":"standard","server_tool_use":{"web_search_requests":0,"web_fetch_requests":0},"pydantic_ai_gateway":{"cost_estimate":0.19284}}}",
    },
  },
  {
    "key": "gen_ai.response.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.usage.input_tokens",
    "value": {
      "intValue": 8011,
    },
  },
  {
    "key": "gen_ai.usage.cache_read_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.cache_write_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.output_tokens",
    "value": {
      "intValue": 969,
    },
  },
  {
    "key": "gen_ai.usage.input_audio_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.cache_audio_read_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_audio_tokens",
    "value": {},
  },
]
`;

exports[`anthropic > should call anthropic via gateway with stream > chunks 1`] = `[]`;

exports[`anthropic > should call anthropic via gateway with stream > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-opus-4-1-20250805",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{"model":"claude-opus-4-1-20250805","stream":true,"max_tokens":1024,"messages":[{"role":"user","content":"What is the capital of France?"}]}",
    },
  },
]
`;
