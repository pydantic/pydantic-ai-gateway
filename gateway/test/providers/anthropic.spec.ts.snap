// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`anthropic > should call anthropic via gateway > llm 1`] = `
{
  "content": [
    {
      "text": "The capital of France is Paris.",
      "type": "text",
    },
  ],
  "id": "msg_019Eoy62TSq2WGFyrVX5mRf5",
  "model": "claude-sonnet-4-20250514",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation": {
      "ephemeral_1h_input_tokens": 0,
      "ephemeral_5m_input_tokens": 0,
    },
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 20,
    "output_tokens": 10,
    "pydantic_ai_gateway": {
      "cost_estimate": 0.00020999999999999998,
    },
    "service_tier": "standard",
  },
}
`;

exports[`anthropic > should call anthropic via gateway > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-sonnet-4-20250514",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"gen_ai.request.max_tokens":{"type":"number"},"gen_ai.request.top_k":{"type":"number"},"gen_ai.request.top_p":{"type":"number"},"gen_ai.request.temperature":{"type":"number"},"gen_ai.request.stop_sequences":{},"gen_ai.request.seed":{},"gen_ai.response.finish_reasons":{},"gen_ai.response.id":{"type":"string"},"gen_ai.input.messages":{},"gen_ai.output.messages":{},"gen_ai.system_instructions":{},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"},"http.response.body.text":{"type":"string"},"gen_ai.response.model":{"type":"string"},"gen_ai.usage.input_tokens":{"type":"number"},"gen_ai.usage.cache_read_tokens":{"type":"number"},"gen_ai.usage.cache_write_tokens":{"type":"number"},"gen_ai.usage.output_tokens":{"type":"number"},"gen_ai.usage.input_audio_tokens":{},"gen_ai.usage.cache_audio_read_tokens":{},"gen_ai.usage.output_audio_tokens":{}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-sonnet-4-20250514",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "gen_ai.request.max_tokens",
    "value": {
      "intValue": 1024,
    },
  },
  {
    "key": "gen_ai.request.top_k",
    "value": {
      "intValue": 1,
    },
  },
  {
    "key": "gen_ai.request.top_p",
    "value": {
      "doubleValue": 0.95,
    },
  },
  {
    "key": "gen_ai.request.temperature",
    "value": {
      "doubleValue": 0.5,
    },
  },
  {
    "key": "gen_ai.request.stop_sequences",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "potato",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.request.seed",
    "value": {},
  },
  {
    "key": "gen_ai.response.finish_reasons",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "end_turn",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.response.id",
    "value": {
      "stringValue": "msg_019Eoy62TSq2WGFyrVX5mRf5",
    },
  },
  {
    "key": "gen_ai.input.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "user",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "What is the capital of France?",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.output.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "assistant",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "The capital of France is Paris.",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
                {
                  "key": "finish_reason",
                  "value": {
                    "stringValue": "end_turn",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.system_instructions",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "type",
                  "value": {
                    "stringValue": "text",
                  },
                },
                {
                  "key": "content",
                  "value": {
                    "stringValue": "You are a helpful assistant.",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{"model":"claude-sonnet-4-20250514","max_tokens":1024,"top_p":0.95,"top_k":1,"temperature":0.5,"stop_sequences":["potato"],"system":"You are a helpful assistant.","messages":[{"role":"user","content":"What is the capital of France?"}]}",
    },
  },
  {
    "key": "http.response.body.text",
    "value": {
      "stringValue": "{"model":"claude-sonnet-4-20250514","id":"msg_019Eoy62TSq2WGFyrVX5mRf5","type":"message","role":"assistant","content":[{"type":"text","text":"The capital of France is Paris."}],"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":20,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"cache_creation":{"ephemeral_5m_input_tokens":0,"ephemeral_1h_input_tokens":0},"output_tokens":10,"service_tier":"standard","pydantic_ai_gateway":{"cost_estimate":0.00020999999999999998}}}",
    },
  },
  {
    "key": "gen_ai.response.model",
    "value": {
      "stringValue": "claude-sonnet-4-20250514",
    },
  },
  {
    "key": "gen_ai.usage.input_tokens",
    "value": {
      "intValue": 20,
    },
  },
  {
    "key": "gen_ai.usage.cache_read_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.cache_write_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.output_tokens",
    "value": {
      "intValue": 10,
    },
  },
  {
    "key": "gen_ai.usage.input_audio_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.cache_audio_read_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_audio_tokens",
    "value": {},
  },
]
`;

exports[`anthropic > should call anthropic via gateway with builtin tools > llm 1`] = `
{
  "container": {
    "expires_at": "2025-10-30T13:28:52.082985Z",
    "id": "container_011CUdPAvCCtE46GbE6mU9Ts",
  },
  "content": [
    {
      "text": "I'll calculate the mean and standard deviation of the given data set [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].",
      "type": "text",
    },
    {
      "id": "srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2",
      "input": {
        "command": "create",
        "file_text": "import math

# Data set
data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Calculate mean
n = len(data)
mean = sum(data) / n

# Calculate standard deviation
# Using the formula: σ = sqrt(Σ(xi - μ)² / n)
variance = sum((x - mean) ** 2 for x in data) / n
std_dev = math.sqrt(variance)

# Also calculate sample standard deviation (n-1 in denominator)
sample_variance = sum((x - mean) ** 2 for x in data) / (n - 1)
sample_std_dev = math.sqrt(sample_variance)

print(f"Data set: {data}")
print(f"Number of values: {n}")
print(f"\\nMean: {mean}")
print(f"\\nPopulation Standard Deviation (σ): {std_dev:.4f}")
print(f"Sample Standard Deviation (s): {sample_std_dev:.4f}")

# Show the calculation steps
print("\\n--- Calculation Steps ---")
print(f"Sum of values: {sum(data)}")
print(f"Mean = {sum(data)} / {n} = {mean}")

print("\\nDeviations from mean:")
for x in data:
    deviation = x - mean
    squared_dev = deviation ** 2
    print(f"  {x} - {mean} = {deviation:6.1f}, squared = {squared_dev:7.2f}")

print(f"\\nSum of squared deviations: {sum((x - mean) ** 2 for x in data):.2f}")
print(f"Population variance = {sum((x - mean) ** 2 for x in data):.2f} / {n} = {variance:.2f}")
print(f"Population standard deviation = √{variance:.2f} = {std_dev:.4f}")
print(f"\\nSample variance = {sum((x - mean) ** 2 for x in data):.2f} / {n-1} = {sample_variance:.2f}")
print(f"Sample standard deviation = √{sample_variance:.2f} = {sample_std_dev:.4f}")",
        "path": "/tmp/calculate_stats.py",
      },
      "name": "text_editor_code_execution",
      "type": "server_tool_use",
    },
    {
      "content": {
        "is_file_update": false,
        "type": "text_editor_code_execution_create_result",
      },
      "tool_use_id": "srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2",
      "type": "text_editor_code_execution_tool_result",
    },
    {
      "id": "srvtoolu_01Serk4CvXKBxmi8sCUSSNhx",
      "input": {
        "command": "python /tmp/calculate_stats.py",
      },
      "name": "bash_code_execution",
      "type": "server_tool_use",
    },
    {
      "content": {
        "content": [],
        "return_code": 0,
        "stderr": "",
        "stdout": "Data set: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Number of values: 10

Mean: 5.5

Population Standard Deviation (σ): 2.8723
Sample Standard Deviation (s): 3.0277

--- Calculation Steps ---
Sum of values: 55
Mean = 55 / 10 = 5.5

Deviations from mean:
  1 - 5.5 =   -4.5, squared =   20.25
  2 - 5.5 =   -3.5, squared =   12.25
  3 - 5.5 =   -2.5, squared =    6.25
  4 - 5.5 =   -1.5, squared =    2.25
  5 - 5.5 =   -0.5, squared =    0.25
  6 - 5.5 =    0.5, squared =    0.25
  7 - 5.5 =    1.5, squared =    2.25
  8 - 5.5 =    2.5, squared =    6.25
  9 - 5.5 =    3.5, squared =   12.25
  10 - 5.5 =    4.5, squared =   20.25

Sum of squared deviations: 82.50
Population variance = 82.50 / 10 = 8.25
Population standard deviation = √8.25 = 2.8723

Sample variance = 82.50 / 9 = 9.17
Sample standard deviation = √9.17 = 3.0277
",
        "type": "bash_code_execution_result",
      },
      "tool_use_id": "srvtoolu_01Serk4CvXKBxmi8sCUSSNhx",
      "type": "bash_code_execution_tool_result",
    },
    {
      "text": "## Results:

For the data set **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:

- **Mean: 5.5**
- **Population Standard Deviation (σ): 2.8723**
- **Sample Standard Deviation (s): 3.0277**

### Explanation:

1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**

2. **Standard Deviation**:
   - The **population standard deviation** (2.8723) is used when your data represents the entire population
   - The **sample standard deviation** (3.0277) is used when your data is a sample from a larger population

   The difference is in the denominator: population uses n (10), while sample uses n-1 (9) to account for sampling bias.

The calculations show that the values are spread around the mean of 5.5 with a typical deviation of about 2.87 units (for population) or 3.03 units (for sample).",
      "type": "text",
    },
  ],
  "id": "msg_0181tJgWg18Er4y7rbFW8z4G",
  "model": "claude-opus-4-1-20250805",
  "role": "assistant",
  "stop_reason": "end_turn",
  "stop_sequence": null,
  "type": "message",
  "usage": {
    "cache_creation": {
      "ephemeral_1h_input_tokens": 0,
      "ephemeral_5m_input_tokens": 0,
    },
    "cache_creation_input_tokens": 0,
    "cache_read_input_tokens": 0,
    "input_tokens": 8196,
    "output_tokens": 1014,
    "pydantic_ai_gateway": {
      "cost_estimate": 0.19899,
    },
    "server_tool_use": {
      "web_search_requests": 0,
    },
    "service_tier": "standard",
  },
}
`;

exports[`anthropic > should call anthropic via gateway with builtin tools > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-opus-4-1-20250805",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.system":{"type":"string"},"gen_ai.request.max_tokens":{"type":"number"},"gen_ai.request.top_k":{},"gen_ai.request.top_p":{},"gen_ai.request.temperature":{},"gen_ai.request.stop_sequences":{},"gen_ai.request.seed":{},"gen_ai.response.finish_reasons":{},"gen_ai.response.id":{"type":"string"},"gen_ai.input.messages":{},"gen_ai.output.messages":{},"gen_ai.system_instructions":{},"http.response.status_code":{"type":"number"},"http.request.body.text":{"type":"string"},"http.response.body.text":{"type":"string"},"gen_ai.response.model":{"type":"string"},"gen_ai.usage.input_tokens":{"type":"number"},"gen_ai.usage.cache_read_tokens":{"type":"number"},"gen_ai.usage.cache_write_tokens":{"type":"number"},"gen_ai.usage.output_tokens":{"type":"number"},"gen_ai.usage.input_audio_tokens":{},"gen_ai.usage.cache_audio_read_tokens":{},"gen_ai.usage.output_audio_tokens":{}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "gen_ai.request.max_tokens",
    "value": {
      "intValue": 4096,
    },
  },
  {
    "key": "gen_ai.request.top_k",
    "value": {},
  },
  {
    "key": "gen_ai.request.top_p",
    "value": {},
  },
  {
    "key": "gen_ai.request.temperature",
    "value": {},
  },
  {
    "key": "gen_ai.request.stop_sequences",
    "value": {},
  },
  {
    "key": "gen_ai.request.seed",
    "value": {},
  },
  {
    "key": "gen_ai.response.finish_reasons",
    "value": {
      "arrayValue": {
        "values": [
          {
            "stringValue": "end_turn",
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.response.id",
    "value": {
      "stringValue": "msg_0181tJgWg18Er4y7rbFW8z4G",
    },
  },
  {
    "key": "gen_ai.input.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "user",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "Calculate the mean and standard deviation of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.output.messages",
    "value": {
      "arrayValue": {
        "values": [
          {
            "kvlistValue": {
              "values": [
                {
                  "key": "role",
                  "value": {
                    "stringValue": "assistant",
                  },
                },
                {
                  "key": "parts",
                  "value": {
                    "arrayValue": {
                      "values": [
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "I'll calculate the mean and standard deviation of the given data set [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].",
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "text_editor_code_execution",
                                },
                              },
                              {
                                "key": "arguments",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "command",
                                        "value": {
                                          "stringValue": "create",
                                        },
                                      },
                                      {
                                        "key": "path",
                                        "value": {
                                          "stringValue": "/tmp/calculate_stats.py",
                                        },
                                      },
                                      {
                                        "key": "file_text",
                                        "value": {
                                          "stringValue": "import math

# Data set
data = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]

# Calculate mean
n = len(data)
mean = sum(data) / n

# Calculate standard deviation
# Using the formula: σ = sqrt(Σ(xi - μ)² / n)
variance = sum((x - mean) ** 2 for x in data) / n
std_dev = math.sqrt(variance)

# Also calculate sample standard deviation (n-1 in denominator)
sample_variance = sum((x - mean) ** 2 for x in data) / (n - 1)
sample_std_dev = math.sqrt(sample_variance)

print(f"Data set: {data}")
print(f"Number of values: {n}")
print(f"\\nMean: {mean}")
print(f"\\nPopulation Standard Deviation (σ): {std_dev:.4f}")
print(f"Sample Standard Deviation (s): {sample_std_dev:.4f}")

# Show the calculation steps
print("\\n--- Calculation Steps ---")
print(f"Sum of values: {sum(data)}")
print(f"Mean = {sum(data)} / {n} = {mean}")

print("\\nDeviations from mean:")
for x in data:
    deviation = x - mean
    squared_dev = deviation ** 2
    print(f"  {x} - {mean} = {deviation:6.1f}, squared = {squared_dev:7.2f}")

print(f"\\nSum of squared deviations: {sum((x - mean) ** 2 for x in data):.2f}")
print(f"Population variance = {sum((x - mean) ** 2 for x in data):.2f} / {n} = {variance:.2f}")
print(f"Population standard deviation = √{variance:.2f} = {std_dev:.4f}")
print(f"\\nSample variance = {sum((x - mean) ** 2 for x in data):.2f} / {n-1} = {sample_variance:.2f}")
print(f"Sample standard deviation = √{sample_variance:.2f} = {sample_std_dev:.4f}")",
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call_response",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "text_editor_code_execution",
                                },
                              },
                              {
                                "key": "result",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "type",
                                        "value": {
                                          "stringValue": "text_editor_code_execution_create_result",
                                        },
                                      },
                                      {
                                        "key": "is_file_update",
                                        "value": {
                                          "boolValue": false,
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_01Serk4CvXKBxmi8sCUSSNhx",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "bash_code_execution",
                                },
                              },
                              {
                                "key": "arguments",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "command",
                                        "value": {
                                          "stringValue": "python /tmp/calculate_stats.py",
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "tool_call_response",
                                },
                              },
                              {
                                "key": "id",
                                "value": {
                                  "stringValue": "srvtoolu_01Serk4CvXKBxmi8sCUSSNhx",
                                },
                              },
                              {
                                "key": "name",
                                "value": {
                                  "stringValue": "bash_code_execution",
                                },
                              },
                              {
                                "key": "result",
                                "value": {
                                  "kvlistValue": {
                                    "values": [
                                      {
                                        "key": "type",
                                        "value": {
                                          "stringValue": "bash_code_execution_result",
                                        },
                                      },
                                      {
                                        "key": "stdout",
                                        "value": {
                                          "stringValue": "Data set: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
Number of values: 10

Mean: 5.5

Population Standard Deviation (σ): 2.8723
Sample Standard Deviation (s): 3.0277

--- Calculation Steps ---
Sum of values: 55
Mean = 55 / 10 = 5.5

Deviations from mean:
  1 - 5.5 =   -4.5, squared =   20.25
  2 - 5.5 =   -3.5, squared =   12.25
  3 - 5.5 =   -2.5, squared =    6.25
  4 - 5.5 =   -1.5, squared =    2.25
  5 - 5.5 =   -0.5, squared =    0.25
  6 - 5.5 =    0.5, squared =    0.25
  7 - 5.5 =    1.5, squared =    2.25
  8 - 5.5 =    2.5, squared =    6.25
  9 - 5.5 =    3.5, squared =   12.25
  10 - 5.5 =    4.5, squared =   20.25

Sum of squared deviations: 82.50
Population variance = 82.50 / 10 = 8.25
Population standard deviation = √8.25 = 2.8723

Sample variance = 82.50 / 9 = 9.17
Sample standard deviation = √9.17 = 3.0277
",
                                        },
                                      },
                                      {
                                        "key": "stderr",
                                        "value": {
                                          "stringValue": "",
                                        },
                                      },
                                      {
                                        "key": "return_code",
                                        "value": {
                                          "intValue": 0,
                                        },
                                      },
                                      {
                                        "key": "content",
                                        "value": {
                                          "arrayValue": {
                                            "values": [],
                                          },
                                        },
                                      },
                                    ],
                                  },
                                },
                              },
                              {
                                "key": "builtin",
                                "value": {
                                  "boolValue": true,
                                },
                              },
                            ],
                          },
                        },
                        {
                          "kvlistValue": {
                            "values": [
                              {
                                "key": "type",
                                "value": {
                                  "stringValue": "text",
                                },
                              },
                              {
                                "key": "content",
                                "value": {
                                  "stringValue": "## Results:

For the data set **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:

- **Mean: 5.5**
- **Population Standard Deviation (σ): 2.8723**
- **Sample Standard Deviation (s): 3.0277**

### Explanation:

1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**

2. **Standard Deviation**:
   - The **population standard deviation** (2.8723) is used when your data represents the entire population
   - The **sample standard deviation** (3.0277) is used when your data is a sample from a larger population

   The difference is in the denominator: population uses n (10), while sample uses n-1 (9) to account for sampling bias.

The calculations show that the values are spread around the mean of 5.5 with a typical deviation of about 2.87 units (for population) or 3.03 units (for sample).",
                                },
                              },
                            ],
                          },
                        },
                      ],
                    },
                  },
                },
                {
                  "key": "finish_reason",
                  "value": {
                    "stringValue": "end_turn",
                  },
                },
              ],
            },
          },
        ],
      },
    },
  },
  {
    "key": "gen_ai.system_instructions",
    "value": {},
  },
  {
    "key": "http.response.status_code",
    "value": {
      "intValue": 200,
    },
  },
  {
    "key": "http.request.body.text",
    "value": {
      "stringValue": "{"model":"claude-opus-4-1-20250805","max_tokens":4096,"messages":[{"role":"user","content":"Calculate the mean and standard deviation of [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]"}],"tools":[{"type":"code_execution_20250825","name":"code_execution"}]}",
    },
  },
  {
    "key": "http.response.body.text",
    "value": {
      "stringValue": "{"model":"claude-opus-4-1-20250805","id":"msg_0181tJgWg18Er4y7rbFW8z4G","type":"message","role":"assistant","content":[{"type":"text","text":"I'll calculate the mean and standard deviation of the given data set [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]."},{"type":"server_tool_use","id":"srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2","name":"text_editor_code_execution","input":{"command":"create","path":"/tmp/calculate_stats.py","file_text":"import math\\n\\n# Data set\\ndata = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\n\\n# Calculate mean\\nn = len(data)\\nmean = sum(data) / n\\n\\n# Calculate standard deviation\\n# Using the formula: σ = sqrt(Σ(xi - μ)² / n)\\nvariance = sum((x - mean) ** 2 for x in data) / n\\nstd_dev = math.sqrt(variance)\\n\\n# Also calculate sample standard deviation (n-1 in denominator)\\nsample_variance = sum((x - mean) ** 2 for x in data) / (n - 1)\\nsample_std_dev = math.sqrt(sample_variance)\\n\\nprint(f\\"Data set: {data}\\")\\nprint(f\\"Number of values: {n}\\")\\nprint(f\\"\\\\nMean: {mean}\\")\\nprint(f\\"\\\\nPopulation Standard Deviation (σ): {std_dev:.4f}\\")\\nprint(f\\"Sample Standard Deviation (s): {sample_std_dev:.4f}\\")\\n\\n# Show the calculation steps\\nprint(\\"\\\\n--- Calculation Steps ---\\")\\nprint(f\\"Sum of values: {sum(data)}\\")\\nprint(f\\"Mean = {sum(data)} / {n} = {mean}\\")\\n\\nprint(\\"\\\\nDeviations from mean:\\")\\nfor x in data:\\n    deviation = x - mean\\n    squared_dev = deviation ** 2\\n    print(f\\"  {x} - {mean} = {deviation:6.1f}, squared = {squared_dev:7.2f}\\")\\n\\nprint(f\\"\\\\nSum of squared deviations: {sum((x - mean) ** 2 for x in data):.2f}\\")\\nprint(f\\"Population variance = {sum((x - mean) ** 2 for x in data):.2f} / {n} = {variance:.2f}\\")\\nprint(f\\"Population standard deviation = √{variance:.2f} = {std_dev:.4f}\\")\\nprint(f\\"\\\\nSample variance = {sum((x - mean) ** 2 for x in data):.2f} / {n-1} = {sample_variance:.2f}\\")\\nprint(f\\"Sample standard deviation = √{sample_variance:.2f} = {sample_std_dev:.4f}\\")"}},{"type":"text_editor_code_execution_tool_result","tool_use_id":"srvtoolu_01Uvcp7t4CLTUpWkEV3knUy2","content":{"type":"text_editor_code_execution_create_result","is_file_update":false}},{"type":"server_tool_use","id":"srvtoolu_01Serk4CvXKBxmi8sCUSSNhx","name":"bash_code_execution","input":{"command":"python /tmp/calculate_stats.py"}},{"type":"bash_code_execution_tool_result","tool_use_id":"srvtoolu_01Serk4CvXKBxmi8sCUSSNhx","content":{"type":"bash_code_execution_result","stdout":"Data set: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\\nNumber of values: 10\\n\\nMean: 5.5\\n\\nPopulation Standard Deviation (σ): 2.8723\\nSample Standard Deviation (s): 3.0277\\n\\n--- Calculation Steps ---\\nSum of values: 55\\nMean = 55 / 10 = 5.5\\n\\nDeviations from mean:\\n  1 - 5.5 =   -4.5, squared =   20.25\\n  2 - 5.5 =   -3.5, squared =   12.25\\n  3 - 5.5 =   -2.5, squared =    6.25\\n  4 - 5.5 =   -1.5, squared =    2.25\\n  5 - 5.5 =   -0.5, squared =    0.25\\n  6 - 5.5 =    0.5, squared =    0.25\\n  7 - 5.5 =    1.5, squared =    2.25\\n  8 - 5.5 =    2.5, squared =    6.25\\n  9 - 5.5 =    3.5, squared =   12.25\\n  10 - 5.5 =    4.5, squared =   20.25\\n\\nSum of squared deviations: 82.50\\nPopulation variance = 82.50 / 10 = 8.25\\nPopulation standard deviation = √8.25 = 2.8723\\n\\nSample variance = 82.50 / 9 = 9.17\\nSample standard deviation = √9.17 = 3.0277\\n","stderr":"","return_code":0,"content":[]}},{"type":"text","text":"## Results:\\n\\nFor the data set **[1, 2, 3, 4, 5, 6, 7, 8, 9, 10]**:\\n\\n- **Mean: 5.5**\\n- **Population Standard Deviation (σ): 2.8723**\\n- **Sample Standard Deviation (s): 3.0277**\\n\\n### Explanation:\\n\\n1. **Mean** = Sum of all values / Number of values = 55 / 10 = **5.5**\\n\\n2. **Standard Deviation**: \\n   - The **population standard deviation** (2.8723) is used when your data represents the entire population\\n   - The **sample standard deviation** (3.0277) is used when your data is a sample from a larger population\\n   \\n   The difference is in the denominator: population uses n (10), while sample uses n-1 (9) to account for sampling bias.\\n\\nThe calculations show that the values are spread around the mean of 5.5 with a typical deviation of about 2.87 units (for population) or 3.03 units (for sample)."}],"container":{"id":"container_011CUdPAvCCtE46GbE6mU9Ts","expires_at":"2025-10-30T13:28:52.082985Z"},"stop_reason":"end_turn","stop_sequence":null,"usage":{"input_tokens":8196,"cache_creation_input_tokens":0,"cache_read_input_tokens":0,"cache_creation":{"ephemeral_5m_input_tokens":0,"ephemeral_1h_input_tokens":0},"output_tokens":1014,"service_tier":"standard","server_tool_use":{"web_search_requests":0},"pydantic_ai_gateway":{"cost_estimate":0.19899}}}",
    },
  },
  {
    "key": "gen_ai.response.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.usage.input_tokens",
    "value": {
      "intValue": 8196,
    },
  },
  {
    "key": "gen_ai.usage.cache_read_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.cache_write_tokens",
    "value": {
      "intValue": 0,
    },
  },
  {
    "key": "gen_ai.usage.output_tokens",
    "value": {
      "intValue": 1014,
    },
  },
  {
    "key": "gen_ai.usage.input_audio_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.cache_audio_read_tokens",
    "value": {},
  },
  {
    "key": "gen_ai.usage.output_audio_tokens",
    "value": {},
  },
]
`;

exports[`anthropic > should call anthropic via gateway with stream > span 1`] = `
[
  {
    "key": "logfire.msg",
    "value": {
      "stringValue": "chat claude-opus-4-1-20250805",
    },
  },
  {
    "key": "logfire.json_schema",
    "value": {
      "stringValue": "{"type":"object","properties":{"gen_ai.system":{"type":"string"},"gen_ai.operation.name":{"type":"string"},"gen_ai.request.model":{"type":"string"},"gen_ai.request.max_tokens":{"type":"number"}}}",
    },
  },
  {
    "key": "logfire.level_num",
    "value": {
      "intValue": 9,
    },
  },
  {
    "key": "gen_ai.system",
    "value": {
      "stringValue": "anthropic",
    },
  },
  {
    "key": "gen_ai.operation.name",
    "value": {
      "stringValue": "chat",
    },
  },
  {
    "key": "gen_ai.request.model",
    "value": {
      "stringValue": "claude-opus-4-1-20250805",
    },
  },
  {
    "key": "gen_ai.request.max_tokens",
    "value": {
      "intValue": 1024,
    },
  },
]
`;
